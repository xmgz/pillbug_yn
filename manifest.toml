#:schema https://raw.githubusercontent.com/YunoHost/apps/master/schemas/manifest.v2.schema.json

packaging_format = 2

id = "pillbug"
name = "Pillbug"

description.en = "pillbug is a cohost-inspired client for GoToSocial and other Mastodon API-compatible ActivityPub servers."
description.fr = "le nu fediverse client pur gts (edit this)"

version = "2.0~ynh1"

maintainers = ["ghose"]

[upstream]
license = "not_even"
website = "https://github.com/vivlim/pillbug"
demo = "https://pillbug.vivl.im/"

code = "https://github.com/vivlim/pillbug"

[integration]
yunohost = '>= 11.2.30'
helpers_version = "2.1"
# List of supported archs using the dpkg --print-architecture nomenclature (amd64/i386/armhf/arm64), for example: ["amd64", "i386']
architectures = "all" 
multi_instance = true
ldap = "false" 
sso = "true"
disk = "50M"
ram.build = "50M"
ram.runtime = "50M"

[install]

    [install.domain]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    type = "domain"

    [install.path]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    type = "path"
    default = "/pillbug"

    [install.init_main_permission]
    # this is a generic question - ask strings are automatically handled by YunoHost's core
    # This won't be saved as setting and will instead be used to initialize the SSOwat permission
    type = "group"
    default = "visitors"

[resources]
    # See the packaging documentation for the full set
    # of explanation regarding the behavior and properties for each of those
    # https://yunohost.org/packaging_apps_resources

    [resources.sources]

        [resources.sources.main]
        url = "https://github.com/xmgz/pillbug/releases/download/release/20241114-pillbug_ynh.tar.gz"
        sha256 = "bc09b16f072cb5fdf52a76c75964042d5fd62441cf56b0c3d72d3ca21e14f369"

        # You might want to add an "autoupdate strategy" setting to that your app receive automated pull request with each new update, which also trigger automated testing.
        # autoupdate.strategy = ""

    [resources.system_user]
    # This will provision/deprovision a unix system user

    [resources.install_dir]
    # This will create/remove the install dir as /var/www/$app
    # and store the corresponding setting $install_dir

    [resources.permissions]
    # This will configure SSOwat permission for $domain/$path/
    # The initial allowed group of user is configured via the init_main_permission question (public=visitors, private=all_users)
    main.url = "/"
